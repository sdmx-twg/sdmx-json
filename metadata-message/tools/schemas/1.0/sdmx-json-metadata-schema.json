{
	"id": "https://raw.githubusercontent.com/sdmx-twg/sdmx-json/develop/metadata-message/tools/schemas/1.0/sdmx-json-data-schema.json",
	"$schema": "http://json-schema.org/draft-04/schema#",
	"description": "JSON Schema generated by XMLSpy v2018 sp1 (http://www.altova.com)",
	"type": "object",
	"properties": {
		"meta": {
			"description": "A meta object that contains non-standard meta-information and basic technical information about the message, such as when it was prepared and who has sent it.",
			"type": "object",
			"properties": {
				"schema": {
					"description": "Contains the URL to the schema allowing to validate the message. This also allows identifying the version of SDMX-JSON format used in this message. Providing the link to the SDMX-JSON schema is recommended.",
					"$ref": "#/definitions/uri"
				},
				"id": {
					"description": "Unique string assigned by the sender that identifies the message for further references.",
					"type": "string",
					"pattern": "^[A-Za-z0-9_@$-]+$"
				},
				"test": {
					"description": "Test indicates whether the message is for test purposes or not. False for normal messages.",
					"type": "boolean"
				},
				"prepared": {
					"description": "A timestamp indicating when the message was prepared. Values must follow the ISO 8601 syntax for combined dates and times, including time zone.",
					"type": "string",
					"format": "date-time"
				},
				"content-languages": {
					"description": "Array of strings containing the identifyer of all languages used anywhere in the message for localized elements, and thus the languages of the intended audience, representaing in an array format the same information than the http Content-Language response header, e.g. \"en, fr-fr\". See IETF Language Tags: https://tools.ietf.org/html/rfc5646#section-2.1. The array's first element indicates the main language used in the message for localized elements. The usage of this property is recommended.",
					"type": "array",
					"items": {
						"type": "string",
						"pattern": "^(?:(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))$|^((?:[a-z]{2,3}(?:(?:-[a-z]{3}){1,3})?)|[a-z]{4}|[a-z]{5,8})(?:-([a-z]{4}))?(?:-([a-z]{2}|[0-9]{3}))?((?:-(?:[0-9a-z]{5,8}|[0-9][0-9a-z]{3}))*)?((?:-[0-9a-wy-z](?:-[0-9a-z]{2,8})+)*)?(-x(?:-[0-9a-z]{1,8})+)?$|^(x(?:-[0-9a-z]{1,8})+)$"
					}
				},
				"name": {
					"description": "Name provides a name for the transmission. Multiple instances allow for parallel language values.",
					"$ref": "#/definitions/name"
				},
				"sender": {
					"description": "Sender is information about the party that is transmitting the message.",
					"$ref": "#/definitions/party"
				},
				"receivers": {
					"description": "Receiver is information about the part(y/ies) that is/are the intended recipient(s) of the message. This can be useful if the WS requires authentication.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/party"
					}
				},
				"links": {
					"$ref": "#/definitions/links"
				}
			},
			"required": [
				"id",
				"prepared",
				"sender"
			]
		},
		"data": {
			"description": "Data contains the message's “primary data”.",
			"type": "object",
			"properties": {
				"metadataSets": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MetadataSetType"
					}
				}
			}
		},
		"errors": {
			"type": "array",
			"items": {
				"$ref": "#/definitions/error"
			}
		}
	},
	"additionalProperties": true,
	"definitions": {
		"party": {
			"type": "object",
			"properties": {
				"id": {
					"description": "The id holds the identification of the party.",
					"type": "string",
					"pattern": "^[A-Za-z0-9_@$-]+$"
				},
				"name": {
					"description": "Name is a human-readable name of the party.",
					"$ref": "#/definitions/name"
				},
				"contacts": {
					"description": "Contact provides contact information for the party in regard to the transmission of the message.",
					"type": "array",
					"items": {
						"$ref": "#/definitions/contactType"
					}
				}
			},
			"required": [
				"id"
			]
		},
		"error": {
			"description": "Error describes the structure of an error or warning message.",
			"type": "object",
			"properties": {
				"code": {
					"type": "number"
				},
				"title": {
					"$ref": "#/definitions/textType",
					"description": "Title contains the title of the message, in parallel language values."
				},
				"detail": {
					"$ref": "#/definitions/textType",
					"description": "Detail contains the detailed text of the message, in parallel language values."
				},
				"links": {
					"$ref": "#/definitions/links"
				}
			},
			"required": [
				"code"
			]
		},
		"links": {
			"description": "Links field is an array of link objects. If appropriate, a collection of links to additional external resources for the header.",
			"type": "array",
			"items": {
				"type": "object",
				"properties": {
					"href": {
						"$ref": "#/definitions/uri"
					},
					"rel": {
						"description": "Relationship of the object to the external resource. See semantics below. Use 'self' to indicate the urn to the parent object.",
						"anyOf": [
							{
								"type": "string"
							},
							{
								"description": "structure: provides a reference to the data structure or metadata structure definition depending on the context. Other SDMX artefact types can be specified, e.g. dataflow, provisionagreement, etc. For the others please see: https://tools.ietf.org/rfc/rfc5988.txt",
								"type": "string",
								"enum": [
									"agencyscheme",
									"alternate",
									"appendix",
									"bookmark",
									"categorisation",
									"categoryscheme",
									"chapter",
									"codelist",
									"conceptscheme",
									"constraint",
									"contents",
									"copyright",
									"current",
									"dataflow",
									"dataconsumerscheme",
									"dataproviderscheme",
									"describedby",
									"edit",
									"edit-media",
									"enclosure",
									"first",
									"glossary",
									"help",
									"hierarchicalcodelist",
									"hub",
									"index",
									"last",
									"latest-version",
									"license",
									"metadataflow",
									"metadatastructure",
									"next",
									"next-archive",
									"organisationunitscheme",
									"payment",
									"prev",
									"predecessor-version",
									"previous",
									"prev-archive",
									"process",
									"provisionagreement",
									"related",
									"replies",
									"reportingtaxonomy",
									"section",
									"self",
									"service",
									"start",
									"structure",
									"structureset",
									"stylesheet",
									"subsection",
									"successor-version",
									"up",
									"version-history",
									"via",
									"working-copy",
									"working-copy-of"
								]
							}
						]
					},
					"urn": {
						"description": "The urn holds a valid SDMX Registry URN (see SDMX Registry Specification for details).",
						"$ref": "#/definitions/urn"
					},
					"uri": {
						"description": "The uri attribute holds a URI that contains a link to additional information about the resource, such as a web page. This uri is not an SDMX resource.",
						"$ref": "#/definitions/uri"
					},
					"title": {
						"$ref": "#/definitions/textType"
					},
					"type": {
						"description": "A hint about the type of representation returned by the link.",
						"type": "string"
					},
					"hreflang": {
						"description": "The natural language of the external link, the same as used in the HTTP Accept-Language request header.",
						"type": "string",
						"pattern": "^(?:(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))$|^((?:[a-z]{2,3}(?:(?:-[a-z]{3}){1,3})?)|[a-z]{4}|[a-z]{5,8})(?:-([a-z]{4}))?(?:-([a-z]{2}|[0-9]{3}))?((?:-(?:[0-9a-z]{5,8}|[0-9][0-9a-z]{3}))*)?((?:-[0-9a-wy-z](?:-[0-9a-z]{2,8})+)*)?(-x(?:-[0-9a-z]{1,8})+)?$|^(x(?:-[0-9a-z]{1,8})+)$"
					}
				},
				"required": [
					"href",
					"rel"
				]
			}
		},
		"name": {
			"$ref": "#/definitions/textType",
			"description": "Name is a reusable element, used for providing a human-readable localised name for an object."
		},
		"textType": {
			"description": "TextType provides for a set of language-specific alternates to be provided for any human-readable constructs in the instance.",
			"patternProperties": {
				"^(?:(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))$|^((?:[a-z]{2,3}(?:(?:-[a-z]{3}){1,3})?)|[a-z]{4}|[a-z]{5,8})(?:-([a-z]{4}))?(?:-([a-z]{2}|[0-9]{3}))?((?:-(?:[0-9a-z]{5,8}|[0-9][0-9a-z]{3}))*)?((?:-[0-9a-wy-z](?:-[0-9a-z]{2,8})+)*)?(-x(?:-[0-9a-z]{1,8})+)?$|^(x(?:-[0-9a-z]{1,8})+)$": {
					"type": "string"
				}
			},
			"type": "object"
		},
		"contactType": {
			"description": "ContactType describes the structure of a contact's details.",
			"properties": {
				"name": {
					"description": "Name contains a humain-readable name for the contact.",
					"$ref": "#/definitions/name"
				},
				"department": {
					"description": "Department is a humain-readable designation of the organisational structure by a linguistic expression, within which the contact person works.",
					"$ref": "#/definitions/textType"
				},
				"roles": {
					"description": "Role is the humain-readable responsibility of the contact person with respect to the object for which this person is the contact.",
					"$ref": "#/definitions/textType"
				},
				"emails": {
					"items": {
						"description": "Email holds the email address for the contact person.",
						"type": "string",
						"format": "email"
					},
					"type": "array"
				},
				"faxes": {
					"items": {
						"description": "Fax holds the fax number for the contact person.",
						"type": "string"
					},
					"type": "array"
				},
				"telephones": {
					"items": {
						"description": "Telephone holds the telephone number for the contact person.",
						"type": "string"
					},
					"type": "array"
				},
				"uris": {
					"items": {
						"description": "URI holds an information URL for the contact person.",
						"$ref": "#/definitions/uri"
					},
					"type": "array"
				},
				"x400s": {
					"items": {
						"description": "X400 holds the X.400 address for the contact person.",
						"type": "string"
					},
					"type": "array"
				}
			},
			"type": "object"
		},
		"idType": {
			"pattern": "^[A-Za-z0-9_@$-]+$",
			"description": "IDType provides a type which is used for restricting the characters in codes and IDs throughout all SDMX-ML messages. Valid characters include A-Z, a-z, @, 0-9, _, -, $. Regex: [A-Za-z0-9_@$-]+",
			"type": "string"
		},
		"Annotations": {
			"description": "Annotations is a reusable element the provides for a collection of annotations. It has been made global so that restrictions of types that extend AnnotatableType my reference it.",
			"type": "array",
			"items": {
				"$ref": "#/definitions/AnnotationType"
			},
			"minItems": 1
		},
		"AnnotationType": {
			"description": "AnnotationType provides for non-documentation notes and annotations to be embedded in data and structure messages. It provides optional fields for providing a title, a type description, a URI, and the text of the annotation.",
			"properties": {
				"id": {
					"description": "Non-standard identification of an annotation.",
					"type": "string"
				},
				"text": {
					"$ref": "#/definitions/textType",
					"description": "AnnotationText holds a language-specific string containing the text of the annotation."
				},
				"title": {
					"description": "AnnotationTitle provides a title for the annotation.",
					"type": "string"
				},
				"type": {
					"description": "AnnotationType is used to distinguish between annotations designed to support various uses. The types are not enumerated, as these can be specified by the user or creator of the annotations. The definitions and use of annotation types should be documented by their creator.",
					"type": "string"
				},
				"url": {
					"description": "AnnotationURL is a URI - typically a URL - which points to an external resource which may contain or supplement the annotation. If a specific behavior is desired, an annotation type should be defined which specifies the use of this field more exactly.",
					"$ref": "#/definitions/uri"
				}
			},
			"type": "object"
		},
		"ActionType": {
			"description": "ActionType provides a list of actions, describing the intention of the data transmission from the sender's side. Each action provided at the data or metadata set level applies to the entire data set for which it is given. Note that the actions indicated in the Message Header are optional, and used to summarize specific actions indicated with this data type for all registry interactions. The \"Informational\" value is used when the message contains information in response to a query, rather than being used to invoke a maintenance activity.",
			"enum": [
				"Append",
				"Replace",
				"Delete",
				"Information"
			],
			"pattern": "^[-._:A-Za-z0-9]+$",
			"type": "string"
		},
		"BasicTimePeriodType": {
			"anyOf": [
				{
					"pattern": "^-?([1-9][0-9]{3,}|0[0-9]{3})(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?$",
					"description": "xs:gYear: GregorianTimePeriodType defines the set of standard calendar periods in SDMX."
				},
				{
					"pattern": "^-?([1-9][0-9]{3,}|0[0-9]{3})-(0[1-9]|1[0-2])(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?$",
					"description": "xs:gYearMonth: GregorianTimePeriodType defines the set of standard calendar periods in SDMX."
				},
				{
					"format": "date"
				},
				{
					"format": "date-time"
				}
			],
			"description": "BasicTimePeriodType contains the basic dates and calendar periods. It is a combination of the Gregorian time periods and the date time type..",
			"type": "string"
		},
		"ConstraintTypeCodelistType": {
			"description": "ConstraintTypeCodelistType provides an enumeration of all constraint objects.",
			"enum": [
				"AttachmentConstraint",
				"ContentConstraint"
			],
			"type": "string"
		},
		"DataKeyType": {
			"description": "DataKeyType is a region which defines a distinct full or partial data key. The key consists of a set of values, each referencing a dimension and providing a single value for that dimension. The purpose of the key is to define a subset of a data set (i.e. the observed value and data attribute) which have the dimension values provided in this definition. Any dimension not stated explicitly in this key is assumed to be wild carded, thus allowing for the definition of partial data keys.",
			"properties": {
				"include": {
					"type": "boolean"
				},
				"keyValues": {
					"items": {
						"$ref": "#/definitions/DataKeyValueType"
					},
					"minItems": 1,
					"type": "array"
				}
			},
			"required": [
				"keyValues"
			],
			"type": "object"
		},
		"DataKeyValueType": {
			"description": "DataKeyValueType is a type for providing a dimension value for the purpose of defining a distinct data key. Only a single value can be provided for the dimension.",
			"properties": {
				"id": {
					"$ref": "#/definitions/SingleNCNameIDType"
				},
				"include": {
					"type": "boolean"
				},
				"value": {
					"$ref": "#/definitions/SimpleKeyValueType"
				}
			},
			"required": [
				"value",
				"id"
			],
			"type": "object"
		},
		"NestedNCNameIDType": {
			"pattern": "^[A-Za-z][A-Za-z0-9_-]*(\\.[A-Za-z][A-Za-z0-9_-]*)*$",
			"description": "NestedNCNameIDType restricts the NestedIDType, so that the id may be used to generate valid XML components. IDs created from this type conform to the W3C XML Schema NCNAME type, and therefore can be used as element or attribute names. Regex: [A-Za-z][A-Za-z0-9_\\-]*(\\.[A-Za-z][A-Za-z0-9_\\-]*)* ",
			"type": "string"
		},
		"ItemSchemePackageTypeCodelistType": {
			"description": "ItemSchemePackageTypeCodelistType provides an enumeration of all SDMX packages which contain item schemes.",
			"enum": [
				"base",
				"codelist",
				"categoryscheme",
				"conceptscheme"
			],
			"type": "string"
		},
		"NCNameIDType": {
			"pattern": "^[A-Za-z][A-Za-z0-9_-]*$",
			"description": "NCNameIDType restricts the IDType, so that the id may be used to generate valid XML components. IDs created from this type conform to the W3C XML Schema NCNAME type, and therefore can be used as element or attribute names.",
			"type": "string"
		},
		"NestedIDType": {
			"description": "NestedIDType is the least restrictive form of an identifier used throughout all SDMX-ML messages. It allows for a hierarchical identifier, with each portion separated by the '.' character. For the identifier portions, valid characters include A-Z, a-z, @, 0-9, _, -, $.",
			"pattern": "^[A-Za-z0-9_@$-]+(\\.[A-Za-z0-9_@$-]+)*$",
			"type": "string"
		},
		"ObjectTypeCodelistType": {
			"description": "ObjectTypeCodelistType provides an enumeration of all objects outside of the base infomration model class. This includes some abstract object types such as Organsiation and Constraint.",
			"enum": [
				"Any",
				"Agency",
				"AgencyScheme",
				"AttachmentConstraint",
				"Attribute",
				"AttributeDescriptor",
				"Categorisation",
				"Category",
				"CategorySchemeMap",
				"CategoryScheme",
				"Code",
				"CodeMap",
				"Codelist",
				"CodelistMap",
				"ComponentMap",
				"Concept",
				"ConceptMap",
				"ConceptScheme",
				"ConceptSchemeMap",
				"Constraint",
				"ConstraintTarget",
				"ContentConstraint",
				"Dataflow",
				"DataConsumer",
				"DataConsumerScheme",
				"DataProvider",
				"DataProviderScheme",
				"DataSetTarget",
				"DataStructure",
				"Dimension",
				"DimensionDescriptor",
				"DimensionDescriptorValuesTarget",
				"GroupDimensionDescriptor",
				"HierarchicalCode",
				"HierarchicalCodelist",
				"Hierarchy",
				"HybridCodelistMap",
				"HybridCodeMap",
				"IdentifiableObjectTarget",
				"Level",
				"MeasureDescriptor",
				"MeasureDimension",
				"Metadataflow",
				"MetadataAttribute",
				"MetadataSet",
				"MetadataStructure",
				"MetadataTarget",
				"Organisation",
				"OrganisationMap",
				"OrganisationScheme",
				"OrganisationSchemeMap",
				"OrganisationUnit",
				"OrganisationUnitScheme",
				"PrimaryMeasure",
				"Process",
				"ProcessStep",
				"ProvisionAgreement",
				"ReportingCategory",
				"ReportingCategoryMap",
				"ReportingTaxonomy",
				"ReportingTaxonomyMap",
				"ReportingYearStartDay",
				"ReportPeriodTarget",
				"ReportStructure",
				"StructureMap",
				"StructureSet",
				"TimeDimension",
				"Transition"
			],
			"type": "string"
		},
		"ObservationalTimePeriodType": {
			"anyOf": [
				{
					"$ref": "#/definitions/BasicTimePeriodType"
				},
				{
					"$ref": "#/definitions/ReportingTimePeriodType"
				},
				{
					"pattern": "^.+/P.*T([0-9]+H)?([0-9]+M)?([0-9]+(.[0-9]+)?S)?$",
					"type": "string",
					"description": "TimeRangeType 1"
				},
				{
					"pattern": "^.+/P[^T]+$",
					"type": "string",
					"description": "TimeRangeType 2"
				}
			],
			"description": "ObservationalTimePeriodType specifies a distinct time period or point in time in SDMX. The time period can either be a Gregorian calendar period, a standard reporting period, a distinct point in time, or a time range with a specific date and duration."
		},
		"OrganisationTypeCodelistType": {
			"description": "OrganisationTypeCodelistType provides an enumeration of all organisation objects.",
			"enum": [
				"Agency",
				"DataConsumer",
				"DataProvider",
				"OrganisationUnit"
			],
			"type": "string"
		},
		"PackageTypeCodelistType": {
			"description": "PackageTypeCodelistType provides an enumeration of all SDMX package names.",
			"enum": [
				"base",
				"datastructure",
				"metadatastructure",
				"process",
				"registry",
				"mapping",
				"codelist",
				"categoryscheme",
				"conceptscheme"
			],
			"type": "string"
		},
		"ReportingTimePeriodType": {
			"anyOf": [
				{
					"$ref": "#/definitions/ReportingYearType"
				},
				{
					"$ref": "#/definitions/ReportingSemesterType"
				},
				{
					"$ref": "#/definitions/ReportingTrimesterType"
				},
				{
					"$ref": "#/definitions/ReportingQuarterType"
				},
				{
					"$ref": "#/definitions/ReportingMonthType"
				},
				{
					"$ref": "#/definitions/ReportingWeekType"
				},
				{
					"$ref": "#/definitions/ReportingDayType"
				}
			],
			"description": "ReportingTimePeriodType defines standard reporting periods in SDMX, which are all in relation to the start day (day-month) of a reporting year which is specified in the specialized reporting year start day attribute. If the reporting year start day is not defined, a day of January 1 is assumed. The reporting year must be epxressed as the year at the beginning of the period. Therfore, if the reproting year runs from April to March, any given reporting year is expressed as the year for April. The general format of a report period can be described as  [year]-[period][time zone]?, where the type of period is designated with a single character followed by a number representing the period. Note that all periods allow for an optional time zone offset. See the details of each member type for the specifics of its format."
		},
		"ReportingDayType": {
			"pattern": "^.{5}D(0[0-9][1-9]|[1-2][0-9][0-9]|3[0-5][0-9]|36[0-6]).*$",
			"description": "ReportingDayType defines a time period of 1 day (P1D) in relation to a reporting year which has a start day (day-month) specified in the specialized reporting year start day attribute. In the absence of a start day for the reporting year, a day of January 1 is assumed. The format of a reporting day is YYYY-Dddd (e.g. 2000-D001), where ddd is a three digit day (i.e. 001-366).",
			"type": "string"
		},
		"ReportingMonthType": {
			"pattern": "^.{5}M(0[1-9]|1[0-2]).*$",
			"description": "ReportingMonthType defines a time period of 1 month (P1M) in relation to a reporting year which has a start day (day-month) specified in the specialized reporting year start day attribute. In the absence of a start day for the reporting year, a day of January 1 is assumed. In this case a reporting month will coincide with a calendar month. The format of a reporting month is YYYY-Mmm (e.g. 2000-M01), where mm is a two digit month (i.e. 01-12).",
			"type": "string"
		},
		"ReportingQuarterType": {
			"pattern": "^.{5}Q[1-4].*$",
			"description": "ReportingQuarterType defines a time period of 3 months (P3M) in relation to a reporting year which has a start day (day-month) specified in the specialized reporting year start day attribute. In the absence of a start day for the reporting year, a day of January 1 is assumed. The format of a reporting quarter is YYYY-Qq (e.g. 2000-Q1), where q is a value between 1 and 4.",
			"type": "string"
		},
		"ReportingSemesterType": {
			"pattern": "^.{5}S[1-2].*$",
			"description": "ReportingSemesterType defines a time period of 6 months (P6M) in relation to a reporting year which has a start day (day-month) specified in the specialized reporting year start day attribute. In the absence of a start day for the reporting year, a day of January 1 is assumed. The format of a reporting semester is YYYY-Ss (e.g. 2000-S1), where s is either 1 or 2.",
			"type": "string"
		},
		"ReportingTrimesterType": {
			"pattern": "^.{5}T[1-3].*$",
			"description": "ReportingTrimesterType defines a time period of 4 months (P4M) in relation to a reporting year which has a start day (day-month) specified in the specialized reporting year start day attribute. In the absence of a start day for the reporting year, a day of January 1 is assumed. The format of a reporting trimester is YYYY-Tt (e.g. 2000-T1), where s is either 1, 2, or 3.",
			"type": "string"
		},
		"ReportingWeekType": {
			"pattern": "^.{5}W(0[1-9]|[1-4][0-9]|5[0-3]).*$",
			"description": "ReportingWeekType defines a time period of 7 days (P7D) in relation to a reporting year which has a start day (day-month) specified in the specialized reporting year start day attribute. A standard reporting week is based on the ISO 8601 defintion of a week date, in relation to the reporting period start day. The first week is defined as the week with the first Thursday on or after the reporting year start day. An equivalent definition is the week starting with the Monday nearest in time to the reporting year start day. There are other equivalent defintions, all of which should be adjusted based on the reporting year start day. In the absence of a start day for the reporting year, a day of January 1 is assumed. The format of a reporting week is YYYY-Www (e.g. 2000-W01), where mm is a two digit week (i.e. 01-53).",
			"type": "string"
		},
		"ReportingYearType": {
			"pattern": "^.{5}A1.*$",
			"description": "ReportingYearType defines a time period of 1 year (P1Y) in relation to a reporting year which has a start day (day-month) specified in the specialized reporting year start day attribute. In the absence of a start day for the reporting year, a day of January 1 is assumed. In this case a reporting year will coincide with a calendar year. The format of a reporting year is YYYY-A1 (e.g. 2000-A1). Note that the period value of 1 is fixed.",
			"type": "string"
		},
		"SetReferenceType": {
			"description": "SetReferenceType defines the structure of a reference to a data/metadata set. A full reference to a data provider and the identifier for the data set must be provided. Note that this is not derived from the base reference structure since data/metadata sets are not technically identifiable.",
			"properties": {
				"dataProvider": {
					"$ref": "#/definitions/urn",
					"description": "DataProvider URN reference a the provider of the data/metadata set."
				},
				"id": {
					"description": "ID contains the identifier of the data/metadata set being referenced.",
					"$ref": "#/definitions/idType"
				}
			},
			"required": [
				"dataProvider",
				"id"
			],
			"type": "object"
		},
		"SimpleKeyValueType": {
			"description": "SimpleKeyValueType derives from the SimpleValueType, but does not allow for the cascading of value in the hierarchy, as keys are meant to describe a distinct full or partial key.",
			"type": "string"
		},
		"SingleNCNameIDType": {
			"pattern": "^[A-Za-z][A-Za-z0-9_-]*$",
			"description": "SingleNCNameIDType restricts the NestedNCNameIDType to allow only one level. Note that this is the same pattern as the NCNameIDType, but can be used when the base type to be restricted is a nested NCNameIDType (where as the NCNameIDType could only restrict the IDType).",
			"type": "string"
		},
		"Text": {
			"$ref": "#/definitions/textType",
			"description": "Text is a reusable element, used for providing a language specific text value for general purposes (i.e. not for a name or description)."
		},
		"VersionType": {
			"description": "VersionType is used to communicate version information. The format is restricted to allow for simple incrementing and sorting of version number. The version consists of an unlimited set of numeric components, separated by the '.' character. When processing version, each numeric component (the number preceding and following any '.' character) should be parsed as an integer. Thus, a version of 1.3 and 1.03 would be equivalent, as both the '3' component and the '03' component would parse to an integer value of 3.",
			"pattern": "^[0-9]+(\\.[0-9]+)*$",
			"type": "string",
			"default": "1.0"
		},
		"AttributeSetType": {
			"additionalProperties": false,
			"description": "AttributeSetType defines the structure for a collection of reported metadata attributes.",
			"properties": {
				"reportedAttributes": {
					"items": {
						"$ref": "#/definitions/ReportedAttributeType",
						"description": "ReportedAttribute provides the details of a reported attribute, including a value and/or child reported attributes."
					},
					"minItems": 1,
					"type": "array"
				}
			},
			"required": [
				"reportedAttributes"
			],
			"type": "object"
		},
		"MetadataSetType": {
			"additionalProperties": false,
			"description": "MetadataSetType describes the structure for a metadata set, which contains a collection of reported metadata against a set of values for a given full or partial target identifier, as described in a metadata structure definition. The metadata set may contain reported metadata for multiple report structures defined in a metadata structure definition.",
			"properties": {
				"action": {
					"$ref": "#/definitions/ActionType"
				},
				"publicationPeriod": {
					"$ref": "#/definitions/ObservationalTimePeriodType"
				},
				"publicationYear": {
					"$ref": "#/definitions/gYear"
				},
				"reportingBegin": {
					"$ref": "#/definitions/BasicTimePeriodType"
				},
				"reportingEnd": {
					"$ref": "#/definitions/BasicTimePeriodType"
				},
				"id": {
					"$ref": "#/definitions/idType"
				},
				"validFrom": {
					"type": "string",
					"format": "date-time"
				},
				"validTo": {
					"type": "string",
					"format": "date-time"
				},
				"annotations": {
					"$ref": "#/definitions/Annotations"
				},
				"name": {
					"$ref": "#/definitions/name"
				},
				"links": {
					"$ref": "#/definitions/links"
				},
				"dataProvider": {
					"$ref": "#/definitions/urn",
					"description": "DataProvider URN reference to an organisation with the role of data provider that is providing this metadata set."
				},
				"reports": {
					"items": {
						"$ref": "#/definitions/ReportType",
						"description": "Report contains the details of a the reported metadata, including the identification of the target and the report attributes."
					},
					"minItems": 1,
					"type": "array"
				}
			},
			"required": [
				"reports",
				"links"
			],
			"type": "object"
		},
		"ReferenceValueType": {
			"additionalProperties": false,
			"description": "ReferenceValueType defines the structure of a target object reference value. A target reference value will either be a reference to an identifiable object, a data key, a reference to a data set, or a report period.",
			"properties": {
				"id": {
					"$ref": "#/definitions/idType"
				},
				"constraintContent": {
					"$ref": "#/definitions/urn",
					"description": "ConstraintContentReference provides a URN reference to an attachment constraint for the purpose of reporting metadata against the data identified in the key sets and/or cube regions identified by the constraint. A constraint target will utilize this option as the representation of the target reference value."
				},
				"dataKey": {
					"$ref": "#/definitions/DataKeyType",
					"description": "ObjectReference provides a set of dimension references and values for those dimension for the purpose of reporting metadata against a set of data. A key descriptor values target will utilize this option as the representation of the target reference value."
				},
				"dataSet": {
					"$ref": "#/definitions/SetReferenceType",
					"description": "DataSetReference provides a reference to a data set for the purpose of reporting metadata against the data. A data set target will utilize this option as the representation of the target reference value."
				},
				"object": {
					"$ref": "#/definitions/urn",
					"description": "ObjectReference provides a URN reference to an identifiable object in the SDMX information model. An identifiable object target will utilize this option as the representation of the target reference value."
				},
				"reportPeriod": {
					"description": "ReportPeriod provides a report period for the purpose of qualifying the target reporting period of reported metadata. A report period target will utilize this option as the representation of the target reference value.",
					"$ref": "#/definitions/ObservationalTimePeriodType"
				}
			},
			"required": [
				"id"
			],
			"type": "object"
		},
		"ReportType": {
			"additionalProperties": false,
			"description": "ReportType contains a set of report attributes and identifies a target objects] to which they apply.",
			"properties": {
				"id": {
					"$ref": "#/definitions/idType"
				},
				"annotations": {
					"$ref": "#/definitions/Annotations"
				},
				"attributeSet": {
					"$ref": "#/definitions/AttributeSetType",
					"description": "AttributeSet contains the reported metadata attribute values for the reported metadata."
				},
				"target": {
					"$ref": "#/definitions/TargetType",
					"description": "Target contains a set of target reference values which when taken together, identify the object or objects to which the reported metadata apply."
				}
			},
			"required": [
				"attributeSet",
				"target",
				"id"
			],
			"type": "object"
		},
		"ReportedAttributeType": {
			"additionalProperties": false,
			"description": "ReportedAttributeType defines the structure for a reported metadata attribute. A value for the attribute can be supplied as either a single value, or multi-lingual text values (either structured or unstructured). An optional set of child metadata attributes is also available if the metadata attribute definition defines nested metadata attributes.",
			"properties": {
				"id": {
					"$ref": "#/definitions/idType"
				},
				"value": {
					"type": "string"
				},
				"annotations": {
					"$ref": "#/definitions/Annotations"
				},
				"structuredTexts": {
					"description": "StructuredTexts allows for mixed content of text and XHTML tags. When using this type, one will have to provide a reference to the XHTML schema, since the processing of the tags within this type is strict, meaning that they are validated against the XHTML schema provided.",
					"$ref": "#/definitions/textType"
				},
				"texts": {
					"$ref": "#/definitions/textType"
				},
				"attributeSet": {
					"$ref": "#/definitions/AttributeSetType",
					"description": "AttributeSet contains the reported metadata attribute values for the child metadata attributes."
				}
			},
			"required": [
				"id"
			],
			"type": "object"
		},
		"TargetType": {
			"additionalProperties": false,
			"description": "TargetType defines the structure of a target. It contains a set of target reference values which when taken together, identify the object or objects to which the reported metadata apply.",
			"properties": {
				"id": {
					"$ref": "#/definitions/idType"
				},
				"referenceValues": {
					"items": {
						"$ref": "#/definitions/ReferenceValueType",
						"description": "ReferenceValue contains a value for a target reference object reference. When this is taken with its sibling elements, they identify the object or objects to which the reported metadata apply. The content of this will either be a reference to an identifiable object, a data key, a reference to a data set, or a report period."
					},
					"minItems": 1,
					"type": "array"
				}
			},
			"required": [
				"referenceValues",
				"id"
			],
			"type": "object"
		},
		"uri": {
			"description": "Contains the URL to the schema allowing to validate the message. This also allows identifying the version of SDMX-JSON format used in this message. Providing the link to the SDMX-JSON schema is recommended.",
			"type": "string",
			"format": "uri"
		},
		"urn": {
			"type": "string",
			"format": "urn"
		},
		"gYear": {
			"type": "string",
			"pattern": "^-?([1-9][0-9]{3,}|0[0-9]{3})(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?$",
			"description": "gYear: GregorianTimePeriodType defines the set of standard calendar periods in SDMX."
		}
	}
}
